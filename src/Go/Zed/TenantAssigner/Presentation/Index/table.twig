{% extends '@Gui/Layout/layout.twig' %}

{% set widget_title = 'Assign Tenants - ' ~ tableResponse.tableName %}

{% block head_title widget_title %}
{% block section_title widget_title %}

{% block head_css %}
    {{ parent() }}
    <style>
        .modal {
            display: none;
            position: fixed;
            z-index: 1050;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0,0,0,0.4);
        }
        .modal.show {
            display: block !important;
        }
        .modal-dialog {
            position: relative;
            width: auto;
            margin: 10px;
            max-width: 500px;
            margin: 30px auto;
        }
        .modal-content {
            position: relative;
            background-color: #fff;
            border: 1px solid rgba(0,0,0,.2);
            border-radius: 6px;
            box-shadow: 0 3px 9px rgba(0,0,0,.5);
            background-clip: padding-box;
        }
        .modal-header {
            padding: 15px;
            border-bottom: 1px solid #e5e5e5;
        }
        .modal-header .modal-title {
            margin: 0;
            line-height: 1.42857143;
        }
        .modal-header .close {
            float: right;
            font-size: 21px;
            font-weight: bold;
            line-height: 1;
            color: #000;
            text-shadow: 0 1px 0 #fff;
            background: transparent;
            border: 0;
            cursor: pointer;
        }
        .modal-body {
            position: relative;
            padding: 15px;
        }
        .modal-footer {
            padding: 15px;
            text-align: right;
            border-top: 1px solid #e5e5e5;
        }
        .modal-footer .btn + .btn {
            margin-left: 5px;
        }
    </style>
{% endblock %}

{% block content %}

    {% embed '@Gui/Partials/widget.twig' %}

        {% block widget_content %}

            <div class="row">
                <div class="col-lg-12">
                    <div class="ibox">
                        <div class="ibox-title">
                            <h5>Table: <code>{{ tableResponse.tableName }}</code></h5>
                            <div class="ibox-tools">
                                <a href="{{ url('/tenant-assigner') }}" class="btn btn-sm btn-default">
                                    <i class="fa fa-arrow-left"></i> Back to Tables
                                </a>
                            </div>
                        </div>
                        <div class="ibox-content">

                            <!-- Filters -->
                            <div class="row" style="margin-bottom: 20px;">
                                <div class="col-lg-12">
                                    <form method="GET" action="{{ url('/tenant-assigner/index/table') }}" class="form-inline">
                                        <input type="hidden" name="name" value="{{ tableResponse.tableName }}">

                                        <div class="form-group">
                                            <label for="tenantFilter">Filter by Tenant:</label>
                                            <select name="tenantFilter" id="tenantFilter" class="form-control">
                                                <option value="">All Tenants</option>
                                                {% for tenantId, tenantName in availableTenants %}
                                                    <option value="{{ tenantId }}"
                                                            {% if currentFilters.tenantFilter == tenantId %}selected{% endif %}>
                                                        {{ tenantName }}
                                                    </option>
                                                {% endfor %}
                                            </select>
                                        </div>

                                        <div class="form-group">
                                            <label>
                                                <input type="checkbox" name="showUnassignedOnly" value="1"
                                                       {% if currentFilters.showUnassignedOnly %}checked{% endif %}>
                                                Show Unassigned Only
                                            </label>
                                        </div>

                                        <div class="form-group">
                                            <label for="pageSize">Page Size:</label>
                                            <select name="pageSize" id="pageSize" class="form-control">
                                                <option value="20" {% if currentFilters.pageSize == 20 %}selected{% endif %}>20</option>
                                                <option value="50" {% if currentFilters.pageSize == 50 %}selected{% endif %}>50</option>
                                                <option value="100" {% if currentFilters.pageSize == 100 %}selected{% endif %}>100</option>
                                            </select>
                                        </div>

                                        <button type="submit" class="btn btn-primary">
                                            <i class="fa fa-filter"></i> Filter
                                        </button>

                                        <a href="{{ url('/tenant-assigner/index/table', {'name': tableResponse.tableName}) }}"
                                           class="btn btn-default">
                                            <i class="fa fa-refresh"></i> Reset
                                        </a>
                                    </form>
                                </div>
                            </div>

                            <!-- Bulk Actions -->
                            <div class="row" style="margin-bottom: 20px;">
                                <div class="col-lg-12">
                                    <div class="well well-sm">
                                        <strong>Bulk Actions:</strong>
                                        <select id="bulkTenantSelect" class="form-control" style="width: 200px; display: inline-block;">
                                            <option value="">Select Tenant</option>
                                            {% for tenantId, tenantName in availableTenants %}
                                                <option value="{{ tenantId }}">{{ tenantName }}</option>
                                            {% endfor %}
                                        </select>
                                        <button id="bulkAssignBtn" class="btn btn-warning" disabled>
                                            <i class="fa fa-users"></i> Assign to Selected Rows
                                        </button>
                                        <span id="selectedCount" class="text-muted">0 rows selected</span>
                                    </div>
                                </div>
                            </div>

                            {% if tableResponse.rows is empty %}
                                <div class="alert alert-info">
                                    No rows found for the current filters.
                                </div>
                            {% else %}
                                <div class="table-responsive">
                                    <table class="table table-striped table-bordered table-hover" id="tenantsTable">
                                        <thead>
                                            <tr>
                                                <th width="30">
                                                    <input type="checkbox" id="selectAll">
                                                </th>
                                                {% for column in tableResponse.columns|slice(0, 5) %}
                                                    <th>{{ column|title }}</th>
                                                {% endfor %}
                                                <th>Current Tenant</th>
                                                <th>Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            {% for row in tableResponse.rows %}
                                                <tr data-row-id="{{ row.id }}">
                                                    <td>
                                                        <input type="checkbox" class="row-checkbox" value="{{ row.id }}">
                                                    </td>
                                                    {% for column, value in row.displayColumns %}
                                                        <td>
                                                            {% if value|length > 50 %}
                                                                <span title="{{ value }}">{{ value|slice(0, 47) }}...</span>
                                                            {% else %}
                                                                {{ value }}
                                                            {% endif %}
                                                        </td>
                                                    {% endfor %}
                                                    <td>
                                                        {% if row.tenantId %}
                                                            <span class="label label-success">{{ availableTenants[row.tenantId] ?? row.tenantId }}</span>
                                                        {% else %}
                                                            <span class="label label-default">Unassigned</span>
                                                        {% endif %}
                                                    </td>
                                                    <td>
                                                        <div class="btn-group">
                                                            <select class="form-control tenant-select"
                                                                    data-row-id="{{ row.id }}"
                                                                    data-table="{{ tableResponse.tableName }}"
                                                                    data-id-column="{{ tableResponse.columns[0] }}"
                                                                    style="width: 150px;position: relative;float: left;">
                                                                <option value="">Select Tenant</option>
                                                                {% for tenantId, tenantName in availableTenants %}
                                                                    <option value="{{ tenantId }}"
                                                                            {% if row.tenantId == tenantId %}selected{% endif %}>
                                                                        {{ tenantName }}
                                                                    </option>
                                                                {% endfor %}
                                                            </select>
                                                            <button class="btn btn-sm btn-primary assign-btn"
                                                                    data-row-id="{{ row.id }}"
                                                                    data-table="{{ tableResponse.tableName }}"
                                                                    data-id-column="{{ tableResponse.columns[0] }}"
                                                                    style="margin-left: 5px;">
                                                                <i class="fa fa-check"></i> Assign
                                                            </button>
                                                            <button class="btn btn-sm btn-success duplicate-btn"
                                                                    data-row-id="{{ row.id }}"
                                                                    data-table="{{ tableResponse.tableName }}"
                                                                    data-id-column="{{ tableResponse.columns[0] }}"
                                                                    style="margin-left: 5px;"
                                                                    title="Duplicate for another tenant">
                                                                <i class="fa fa-copy"></i> Duplicate
                                                            </button>
                                                        </div>
                                                    </td>
                                                </tr>
                                            {% endfor %}
                                        </tbody>
                                    </table>
                                </div>

                                <!-- Pagination -->
                                {% if tableResponse.pagination.lastPage > 1 %}
                                    <div class="row">
                                        <div class="col-lg-12">
                                            <div class="text-center">
                                                <nav>
                                                    <ul class="pagination">
                                                        {% if tableResponse.pagination.previousPage %}
                                                            <li>
                                                                <a href="{{ url('/tenant-assigner/index/table', app.request.query.all|merge({'page': tableResponse.pagination.previousPage})) }}">
                                                                    &laquo; Previous
                                                                </a>
                                                            </li>
                                                        {% endif %}

                                                        {% for page in range(max(1, tableResponse.pagination.page - 2), min(tableResponse.pagination.lastPage, tableResponse.pagination.page + 2)) %}
                                                            <li {% if page == tableResponse.pagination.page %}class="active"{% endif %}>
                                                                <a href="{{ url('/tenant-assigner/index/table', app.request.query.all|merge({'page': page})) }}">
                                                                    {{ page }}
                                                                </a>
                                                            </li>
                                                        {% endfor %}

                                                        {% if tableResponse.pagination.nextPage %}
                                                            <li>
                                                                <a href="{{ url('/tenant-assigner/index/table', app.request.query.all|merge({'page': tableResponse.pagination.nextPage})) }}">
                                                                    Next &raquo;
                                                                </a>
                                                            </li>
                                                        {% endif %}
                                                    </ul>
                                                </nav>

                                                <p class="text-muted">
                                                    Showing {{ tableResponse.pagination.firstIndex }} to {{ tableResponse.pagination.lastIndex }}
                                                    of {{ tableResponse.pagination.nbResults }} results
                                                </p>
                                            </div>
                                        </div>
                                    </div>
                                {% endif %}
                            {% endif %}

                        </div>
                    </div>
                </div>
            </div>

        {% endblock %}

    {% endembed %}

{% endblock %}

{% block footer_js %}
    {{ parent() }}

    <script>
        document.addEventListener('DOMContentLoaded', function() {

            // Handle individual tenant assignment
            document.querySelectorAll('.assign-btn').forEach(function(btn) {
                btn.addEventListener('click', function() {
                    var rowId = this.getAttribute('data-row-id');
                    var tableName = this.getAttribute('data-table');
                    var idColumn = this.getAttribute('data-id-column');
                    var selectElement = this.parentNode.querySelector('.tenant-select');
                    var tenantId = selectElement.value;

                    if (!tenantId) {
                        if (typeof toastr !== 'undefined') {
                            toastr.error('Please select a tenant first');
                        } else {
                            alert('Please select a tenant first');
                        }
                        return;
                    }

                    this.disabled = true;
                    this.innerHTML = '<i class="fa fa-spinner fa-spin"></i> Assigning...';

                    // Create FormData
                    var formData = new FormData();
                    formData.append('tableName', tableName);
                    formData.append('rowId', rowId);
                    formData.append('tenantId', tenantId);
                    formData.append('idColumnName', idColumn);

                    fetch('{{ url("/tenant-assigner/index/assign-tenant") }}', {
                        method: 'POST',
                        body: formData,
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    })
                    .then(function(response) {
                        return response.json();
                    })
                    .then(function(data) {
                        if (data.success) {
                            if (typeof toastr !== 'undefined') {
                                toastr.success(data.message || 'Tenant assigned successfully');
                            } else {
                                alert(data.message || 'Tenant assigned successfully');
                            }
                            location.reload();
                        } else {
                            if (typeof toastr !== 'undefined') {
                                toastr.error(data.message || 'Failed to assign tenant');
                            } else {
                                alert(data.message || 'Failed to assign tenant');
                            }
                        }
                    })
                    .catch(function(error) {
                        if (typeof toastr !== 'undefined') {
                            toastr.error('Network error occurred');
                        } else {
                            alert('Network error occurred');
                        }
                    })
                    .finally(function() {
                        btn.disabled = false;
                        btn.innerHTML = '<i class="fa fa-check"></i> Assign';
                    });
                });
            });

            // Handle duplicate for tenant
            document.querySelectorAll('.duplicate-btn').forEach(function(btn) {
                btn.addEventListener('click', function() {
                    var rowId = this.getAttribute('data-row-id');
                    var tableName = this.getAttribute('data-table');
                    var idColumn = this.getAttribute('data-id-column');

                    // Create modal for tenant selection
                    var modalHtml = `
                        <div class="modal fade" id="duplicateModal" tabindex="-1" role="dialog">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h4 class="modal-title">Duplicate Row for Tenant</h4>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        <p>Select a tenant to duplicate this row for:</p>
                                        <div class="form-group">
                                            <label for="duplicateTargetTenant">Target Tenant:</label>
                                            <select class="form-control" id="duplicateTargetTenant">
                                                <option value="">Select Tenant</option>
                                                {% for tenantId, tenantName in availableTenants %}
                                                    <option value="{{ tenantId }}">{{ tenantName }}</option>
                                                {% endfor %}
                                            </select>
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                                        <button type="button" class="btn btn-success" id="confirmDuplicate">
                                            <i class="fa fa-copy"></i> Duplicate
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    `;

                    // Remove existing modal if present
                    var existingModal = document.getElementById('duplicateModal');
                    if (existingModal) {
                        existingModal.remove();
                    }

                    // Add modal to body
                    document.body.insertAdjacentHTML('beforeend', modalHtml);

                    // Show modal
                    var modal = document.getElementById('duplicateModal');
                    modal.style.display = 'block';
                    modal.classList.add('show');

                    // Handle modal close
                    var closeModal = function() {
                        modal.style.display = 'none';
                        modal.classList.remove('show');
                        setTimeout(function() {
                            modal.remove();
                        }, 300);
                    };

                    modal.querySelectorAll('[data-dismiss="modal"]').forEach(function(closeBtn) {
                        closeBtn.addEventListener('click', closeModal);
                    });

                    // Handle confirm duplicate
                    var confirmBtn = document.getElementById('confirmDuplicate');
                    confirmBtn.addEventListener('click', function() {
                        var targetTenantId = document.getElementById('duplicateTargetTenant').value;

                        if (!targetTenantId) {
                            if (typeof toastr !== 'undefined') {
                                toastr.error('Please select a target tenant');
                            } else {
                                alert('Please select a target tenant');
                            }
                            return;
                        }

                        confirmBtn.disabled = true;
                        confirmBtn.innerHTML = '<i class="fa fa-spinner fa-spin"></i> Duplicating...';

                        var formData = new FormData();
                        formData.append('tableName', tableName);
                        formData.append('sourceRowId', rowId);
                        formData.append('targetTenantId', targetTenantId);
                        formData.append('idColumnName', idColumn);

                        fetch('{{ url("/tenant-assigner/index/duplicate-row-for-tenant") }}', {
                            method: 'POST',
                            body: formData,
                            headers: {
                                'X-Requested-With': 'XMLHttpRequest'
                            }
                        })
                        .then(function(response) {
                            return response.json();
                        })
                        .then(function(data) {
                            if (data.success) {
                                if (typeof toastr !== 'undefined') {
                                    toastr.success(data.message || 'Row duplicated successfully');
                                } else {
                                    alert(data.message || 'Row duplicated successfully');
                                }
                                closeModal();
                                location.reload();
                            } else {
                                if (typeof toastr !== 'undefined') {
                                    toastr.error(data.message || 'Failed to duplicate row');
                                } else {
                                    alert(data.message || 'Failed to duplicate row');
                                }
                            }
                        })
                        .catch(function(error) {
                            if (typeof toastr !== 'undefined') {
                                toastr.error('Network error occurred');
                            } else {
                                alert('Network error occurred');
                            }
                        })
                        .finally(function() {
                            confirmBtn.disabled = false;
                            confirmBtn.innerHTML = '<i class="fa fa-copy"></i> Duplicate';
                        });
                    });
                });
            });

            // Handle row selection
            document.querySelectorAll('.row-checkbox').forEach(function(checkbox) {
                checkbox.addEventListener('change', function() {
                    updateSelectedCount();
                    updateBulkControls();
                });
            });

            var selectAllCheckbox = document.getElementById('selectAll');
            if (selectAllCheckbox) {
                selectAllCheckbox.addEventListener('change', function() {
                    var checkboxes = document.querySelectorAll('.row-checkbox');
                    checkboxes.forEach(function(checkbox) {
                        checkbox.checked = selectAllCheckbox.checked;
                    });
                    updateSelectedCount();
                    updateBulkControls();
                });
            }

            var bulkTenantSelect = document.getElementById('bulkTenantSelect');
            if (bulkTenantSelect) {
                bulkTenantSelect.addEventListener('change', function() {
                    updateBulkControls();
                });
            }

            // Handle bulk assignment
            var bulkAssignBtn = document.getElementById('bulkAssignBtn');
            if (bulkAssignBtn) {
                bulkAssignBtn.addEventListener('click', function() {
                    var tenantId = bulkTenantSelect.value;
                    var selectedCheckboxes = document.querySelectorAll('.row-checkbox:checked');
                    var selectedRows = Array.from(selectedCheckboxes).map(function(cb) {
                        return cb.value;
                    });

                    if (!tenantId || selectedRows.length === 0) {
                        if (typeof toastr !== 'undefined') {
                            toastr.error('Please select a tenant and at least one row');
                        } else {
                            alert('Please select a tenant and at least one row');
                        }
                        return;
                    }

                    if (!confirm('Are you sure you want to assign ' + selectedRows.length + ' rows to the selected tenant?')) {
                        return;
                    }

                    this.disabled = true;
                    this.innerHTML = '<i class="fa fa-spinner fa-spin"></i> Assigning...';

                    // Create FormData
                    var formData = new FormData();
                    formData.append('tableName', '{{ tableResponse.tableName }}');
                    formData.append('tenantId', tenantId);
                    formData.append('idColumnName', '{{ tableResponse.columns[0] ?? "id" }}');

                    // Add each rowId as a separate form field
                    selectedRows.forEach(function(rowId) {
                        formData.append('rowIds[]', rowId);
                    });

                    fetch('{{ url("/tenant-assigner/index/bulk-assign-tenant") }}', {
                        method: 'POST',
                        body: formData,
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    })
                    .then(function(response) {
                        return response.json();
                    })
                    .then(function(data) {
                        if (data.success) {
                            if (typeof toastr !== 'undefined') {
                                toastr.success(data.message || 'Tenants assigned successfully');
                            } else {
                                alert(data.message || 'Tenants assigned successfully');
                            }
                            location.reload();
                        } else {
                            if (typeof toastr !== 'undefined') {
                                toastr.error(data.message || 'Some assignments failed');
                                if (data.errors) {
                                    data.errors.forEach(function(error) {
                                        toastr.error(error);
                                    });
                                }
                            } else {
                                alert(data.message || 'Some assignments failed');
                            }
                        }
                    })
                    .catch(function(error) {
                        if (typeof toastr !== 'undefined') {
                            toastr.error('Network error occurred');
                        } else {
                            alert('Network error occurred');
                        }
                    })
                    .finally(function() {
                        bulkAssignBtn.disabled = false;
                        bulkAssignBtn.innerHTML = '<i class="fa fa-users"></i> Assign to Selected Rows';
                    });
                });
            }

            function updateSelectedCount() {
                var count = document.querySelectorAll('.row-checkbox:checked').length;
                var selectedCountElement = document.getElementById('selectedCount');
                if (selectedCountElement) {
                    selectedCountElement.textContent = count + ' rows selected';
                }
            }

            function updateBulkControls() {
                var hasSelection = document.querySelectorAll('.row-checkbox:checked').length > 0;
                var hasTenant = bulkTenantSelect && bulkTenantSelect.value !== '';
                if (bulkAssignBtn) {
                    bulkAssignBtn.disabled = !(hasSelection && hasTenant);
                }
            }
        });
    </script>

{% endblock %}
