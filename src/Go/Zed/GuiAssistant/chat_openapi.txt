openapi: 3.1.0
info:
    title: Spryker Products API (Abstract + Nested Concretes)
    version: 1.0.0

paths:
    /product-abstracts:
        get:
            summary: List product abstracts (with optional embedded concretes)
            parameters:
                - $ref: '#/components/parameters/page'
                - $ref: '#/components/parameters/limit'
                - $ref: '#/components/parameters/offset'
                - name: include
                  in: query
                  description: "Include nested resources. Supported: concretes"
                  schema: { type: string, example: "concretes" }
                - name: q
                  description: "The q query parameter, allows text search on sku and name"
                  in: query
                  required: true
                  schema: { type: string }
            responses:
                '200':
                    description: Paginated abstracts (optionally with embedded concretes)
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProductAbstractListResponse'
        post:
            summary: Create a new product abstract with concrete variants
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateProductAbstractRequest'
            responses:
                '201':
                    description: The successfully created Product abstract in a list response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProductAbstractListResponse'
                '400':
                    description: Bad request - validation errors
                '422':
                    description: Unprocessable entity

    /product-abstracts/{abstractSku}:
        get:
            summary: Get the details of a product abstract
            parameters:
                - $ref: '#/components/parameters/abstractSku'
                - name: include
                  in: query
                  description: "Include nested resources. Supported: concretes"
                  schema: { type: string, example: "concretes" }
            responses:
                '200':
                    description: "The Product abstract in a list response (optionally with embedded concretes)"
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProductAbstractListResponse'
                '404': { description: "Not found" }
        patch:
            summary: Partially update a product abstract (concretes cannot be modified) - only send properties that you want to change.
            parameters:
                -   $ref: '#/components/parameters/abstractSku'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateProductAbstractRequest'
            responses:
                '200':
                    description: The updated Product abstract in a list response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProductAbstractListResponse'
                '400':
                    description: Bad request - validation errors
                '404':
                    description: Not found

    /product-abstracts/{abstractSku}/concretes:
        get:
            summary: List concrete variants for an abstract
            parameters:
                - $ref: '#/components/parameters/abstractSku'
                - name: q
                  description: "The q query parameter, allows text search on sku and name"
                  in: query
                  required: true
                  schema: { type: string }
            responses:
                '200':
                    description: List of variants for the given abstract
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProductConcreteListResponse'

    /product-abstracts/{abstractSku}/concretes/{concreteSku}:
        get:
            summary: Get a single concrete variant under an abstract
            parameters:
                - $ref: '#/components/parameters/abstractSku'
                - $ref: '#/components/parameters/concreteSku'
            responses:
                '200':
                    description: "Product concrete (scoped to its abstract)"
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProductConcreteListResponse'
                '404': { description: Not found }

    /stores:
        get:
            summary: List of available stores with their available currency list and available locale list
            responses:
                '200':
                    description: List of available stores with their available currency list and available locale list
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    stores:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                storeName:
                                                    type: string
                                                    example: DE
                                    availableCurrencyCodes:
                                        type: array
                                        items:
                                            type: string
                                        example: ["EUR"]
                                    availableLocaleNames:
                                        type: array
                                        items:
                                            type: string
                                        example: ["en_US"]

components:
    parameters:
        page: { name: page, in: query, schema: { type: integer, minimum: 1, default: 1 } }
        limit: { name: limit, in: query, schema: { type: integer, minimum: 1, maximum: 15, default: 5 } }
        store: { name: store, in: query, description: Spryker store (e.g., DE), schema: { type: string } }
        locale: { name: locale, in: query, description: e.g., en_US, de_DE, schema: { type: string } }
        abstractSku: { name: abstractSku, in: path, required: true, schema: { type: string } }
        concreteSku: { name: concreteSku, in: path, required: true, schema: { type: string } }
        offset: { name: offset, in: query, schema: { type: integer, minimum: 0, default: 0 }, description: Number of items to skip (for pagination) }

    schemas:
        ProductAbstractListResponse:
            type: object
            description: "Response structure for listing product abstracts and their concrete variants (no stock, price or category info). Includes status, result (with pagination, product_abstracts, and product_concretes)."
            properties:
                status:
                    type: string
                    description: "Status of the response (e.g. 'ok')."
                    example: "ok"
                result:
                    type: object
                    description: "Main result object containing pagination, product abstracts, and product concretes."
                    properties:
                        pagination:
                            type: object
                            description: "Pagination information for the result set."
                            properties:
                                page:
                                    type: integer
                                    example: 1
                                max_per_page:
                                    type: integer
                                    example: 5
                                nb_results:
                                    type: integer
                                    example: 2
                                limit:
                                    type: integer
                                    example: 5
                                offset:
                                    type: integer
                                    example: 0
                        product_abstracts:
                            type: array
                            description: "List of product abstract objects."
                            items:
                                type: object
                                properties:
                                    id_product_abstract:
                                        type: integer
                                        example: 417
                                    sku:
                                        type: string
                                        example: "CAMERA-1000"
                                    name:
                                        type: string
                                        example: "Camera 1000"
                                    approval_status:
                                        type: string
                                        example: "approved"
                                    new_from:
                                        type: [string, "null"]
                                        nullable: true
                                        example: "2025-09-11T00:00:00+00:00"
                                    new_to:
                                        type: [string, "null"]
                                        nullable: true
                                        example: "2025-09-11T00:00:00+00:00"
                                    store_relation:
                                        type: object
                                        properties:
                                            stores:
                                                type: array
                                                items:
                                                    type: object
                                                    properties:
                                                        name:
                                                            type: string
                                                            example: "DE"
                                                        id_store:
                                                            type: integer
                                                            example: 1
                                    localized_attributes:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                name:
                                                    type: [string, "null"]
                                                    example: "Camera 1000"
                                                attributes:
                                                    type: array
                                                    items: {}
                                                    example: []
                                                description:
                                                    type: [string, "null"]
                                                    example: "Spiegellose Kamera"
                                                meta_title:
                                                    type: [string, "null"]
                                                    example: "Best Camera"
                                                meta_keywords:
                                                    type: [string, "null"]
                                                    example: "camera, best camera"
                                                meta_description:
                                                    type: [string, "null"]
                                                    example: "This is the best camera."
                                                locale:
                                                    type: object
                                                    properties:
                                                        locale_name:
                                                            type: string
                                                            example: "de_DE"
                                                        id_locale:
                                                            type: integer
                                                            example: 46
                        product_concretes:
                            type: array
                            description: "List of product concrete collections grouped by abstract SKU."
                            items:
                                type: object
                                properties:
                                    product_abstract_sku:
                                        type: string
                                        example: "CAMERA-1000"
                                    product_concretes:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                sku:
                                                    type: string
                                                    example: "CAMERA-1000-variant-base"
                                                attributes:
                                                    type: object
                                                    additionalProperties: true
                                                    example: {"variant": "base"}
                                                abstract_sku:
                                                    type: string
                                                    example: "CAMERA-1000"
                                                is_active:
                                                    type: boolean
                                                    example: true
                                                stores:
                                                    type: array
                                                    items:
                                                        type: object
                                                        properties:
                                                            name:
                                                                type: string
                                                                example: "DEFAULT"
                                                            id_store:
                                                                type: integer
                                                                example: 1
                                                localized_attributes:
                                                    type: array
                                                    items:
                                                        type: object
                                                        properties:
                                                            name:
                                                                type: [string, "null"]
                                                                example: "CAMERA 1000"
                                                            attributes:
                                                                type: array
                                                                items: {}
                                                                example: []
                                                            description:
                                                                type: [string, "null"]
                                                                example: "Best quality camera on market."
                                                            meta_title:
                                                                type: [string, "null"]
                                                                example: "Best Camera"
                                                            meta_keywords:
                                                                type: [string, "null"]
                                                                example: "camera, best camera"
                                                            meta_description:
                                                                type: [string, "null"]
                                                                example: "This is the best camera."
                                                            locale:
                                                                type: object
                                                                properties:
                                                                    locale_name:
                                                                        type: string
                                                                        example: "de_DE"
                                                                    id_locale:
                                                                        type: integer
                                                                        example: 46
            example:
                status: "ok"
                result:
                    pagination:
                        page: 1
                        max_per_page: 5
                        nb_results: 2
                        limit: 5
                        offset: 0
                    product_abstracts:
                        - id_product_abstract: 101
                          sku: "CAMERA-1000"
                          name: "Mirrorless Camera"
                          approval_status: "approved"
                          new_from: "2025-09-11T00:00:00+00:00"
                          new_to: "2025-09-12T00:00:00+00:00"
                          store_relation:
                              stores:
                                  - name: "DE"
                                    id_store: 1
                          localized_attributes:
                              - name: "Mirrorless Camera"
                                attributes: []
                                description: "High-quality camera for professional photography."
                                meta_title: "Best Camera"
                                meta_keywords: "camera, best camera"
                                meta_description: "This is the best camera."
                                locale:
                                    locale_name: "en_US"
                                    id_locale: 66
                              - name: "Spiegellose Kamera"
                                attributes: []
                                description: "Hochwertige Kamera für professionelle Fotografie."
                                meta_title: "Best Camera"
                                meta_keywords: "camera, best camera"
                                meta_description: "This is the best camera."
                                locale:
                                    locale_name: "de_DE"
                                    id_locale: 46
                    product_concretes:
                        - product_abstract_sku: "CAMERA-1000"
                          product_concretes:
                              - sku: "CAMERA-1000-BLK"
                                attributes:
                                    color: "black"
                                abstract_sku: "CAMERA-1000"
                                is_active: true
                                stores:
                                    - name: "DE"
                                      id_store: 1
                                localized_attributes:
                                    - name: "Mirrorless Camera Black"
                                      attributes: []
                                      description: "Black variant of the mirrorless camera."
                                      meta_title: "Best Camera"
                                      meta_keywords: "camera, best camera"
                                      meta_description: "This is the best camera."
                                      locale:
                                          locale_name: "en_US"
                                          id_locale: 66
                                    - name: "Spiegellose Kamera Schwarz"
                                      attributes: []
                                      description: "Schwarze Variante der spiegellosen Kamera."
                                      meta_title: "Best Camera"
                                      meta_keywords: "camera, best camera"
                                      meta_description: "This is the best camera."
                                      locale:
                                          locale_name: "de_DE"
                                          id_locale: 46

        ProductConcreteListResponse:
            type: object
            description: "Response structure for listing product concrete variants for a given abstract product  (no stock, price or category info). Includes status and result (array of concrete products)."
            properties:
                status:
                    type: string
                    description: "Status of the response (e.g. 'ok')."
                    example: "ok"
                result:
                    type: array
                    description: "Array of concrete product objects."
                    items:
                        type: object
                        properties:
                            sku:
                                type: string
                                description: "Concrete product SKU."
                                example: "CAMERA-1000-BLK"
                            attributes:
                                type: object
                                description: "Key-value attributes for the concrete product."
                                example: { color: "black" }
                            abstract_sku:
                                type: string
                                description: "SKU of the parent abstract product."
                                example: "CAMERA-1000"
                            is_active:
                                type: boolean
                                description: "Whether the concrete product is active."
                                example: true
                            localized_attributes:
                                type: array
                                description: "Localized attributes for the concrete product."
                                items:
                                    type: object
                                    properties:
                                        name:
                                            type: string
                                            description: "Localized name of the concrete product."
                                            example: "Mirrorless Camera Black"
                                        attributes:
                                            type: array
                                            description: "Additional attributes."
                                            items: {}
                                            example: []
                                        description:
                                            type: string
                                            description: "Localized description."
                                            example: "Black variant of the mirrorless camera."
                                        meta_title:
                                            type: [string, "null"]
                                            nullable: true
                                            description: "SEO meta title."
                                            example: null
                                        meta_keywords:
                                            type: [string, "null"]
                                            nullable: true
                                            description: "SEO meta keywords."
                                            example: null
                                        meta_description:
                                            type: [string, "null"]
                                            nullable: true
                                            description: "SEO meta description."
                                            example: null
                                        locale:
                                            type: object
                                            description: "Locale information."
                                            properties:
                                                locale_name:
                                                    type: string
                                                    example: "de_DE"
                                                id_locale:
                                                    type: integer
                                                    example: 46
            example:
                status: "ok"
                result:
                    - sku: "CAMERA-1000-BLK"
                      attributes:
                        color: "black"
                      abstract_sku: "CAMERA-1000"
                      is_active: true
                      localized_attributes:
                        - name: "Mirrorless Camera Black"
                          attributes: []
                          description: "Black variant of the mirrorless camera."
                          meta_title: null
                          meta_keywords: null
                          meta_description: null
                          locale:
                            locale_name: "en_US"
                            id_locale: 66
                        - name: "Spiegellose Kamera Schwarz"
                          attributes: []
                          description: "Schwarze Variante der spiegellosen Kamera."
                          meta_title: null
                          meta_keywords: null
                          meta_description: null
                          locale:
                            locale_name: "de_DE"
                            id_locale: 46

        # Value objects (unchanged)
        LocalizedStringMap:
            type: object
            additionalProperties: { type: string }
        AttributeMap:
            type: object
            additionalProperties:
                oneOf:
                    - type: string
                    - type: number
                    - type: integer
                    - type: boolean
                    - type: array
                      items:
                          oneOf: [{type: string},{type: number},{type: integer},{type: boolean}]
        Stock:
            type: object
            required: [warehouse, quantity, isNeverOutOfStock]
            properties:
                warehouse: { type: string }
                quantity: { type: integer }
                isNeverOutOfStock: { type: boolean }

        CreateProductAbstractRequest:
            type: object
            required: [sku, prices, localizations, concretes]
            properties:
                sku:
                    type: string
                    description: Product abstract SKU
                    example: "camera-1000"
                    pattern: '^[a-z0-9_-]+$'
                    minLength: 1
                newFrom:
                    type: string
                    format: date-time
                    description: Product available from date
                    example: "2025-09-11T00:00:00+00:00"
                newTo:
                    type: string
                    format: date-time
                    description: Product available until date
                    example: "2025-09-30T23:59:59+00:00"
                stores:
                    type: array
                    description: List of store identifiers where the product is available (list can be retrieved from /stores endpoint)
                    minItems: 0
                    items:
                        type: string
                    example: ["DE","AT"]
                prices:
                    type: array
                    description: Pricing information for different stores/currencies
                    minItems: 1
                    items:
                        $ref: '#/components/schemas/CreatePriceRequest'
                localizations:
                    type: array
                    description: Localized content for different locales
                    minItems: 1
                    items:
                        $ref: '#/components/schemas/CreateLocalizationRequest'
                concretes:
                    type: array
                    description: Concrete product variants (at least 1 required)
                    minItems: 1
                    items:
                        $ref: '#/components/schemas/CreateProductConcreteRequest'

        CreateProductConcreteRequest:
            type: object
            required: [attributes, localizations]
            properties:
                attributes:
                    type: object
                    description: One-level associative array. Keys are attribute names, values are attribute values. At least 1 is required.
                    additionalProperties: { type: string }
                    example: { "color": "red", "size": "M" }
                    propertyNames:
                        pattern: '^[a-zA-Z0-9_-]+$'
                    patternProperties:
                        '^[a-zA-Z0-9_-]+$':
                            type: string
                            pattern: '^[a-zA-Z0-9_-]+$'
                localizations:
                    type: array
                    description: Localized content for this concrete variant
                    minItems: 1
                    items:
                        $ref: '#/components/schemas/CreateLocalizationRequest'

        CreatePriceRequest:
            type: object
            required: [storeName, currencyCode, priceTypeName]
            properties:
                storeName:
                    type: string
                    description: Store identifier (list can be retrieved from /stores endpoint)
                    example: "DE"
                currencyCode:
                    type: string
                    description: Currency code (list can be retrieved from /stores endpoint)
                    example: "EUR"
                priceTypeName:
                    type: string
                    description: Price type name (stick to "DEFAULT")
                    example: "DEFAULT"
                grossAmount:
                    type: integer
                    description: Gross amount in minor units (cents)
                    example: 19999
                netAmount:
                    type: integer
                    description: Net amount in minor units (cents)
                    example: 16806

        CreateLocalizationRequest:
            type: object
            required: [localeName, name]
            properties:
                localeName:
                    type: string
                    description: Locale identifier (list can be retrieved from /stores endpoint)
                    example: "de_DE"
                name:
                    type: string
                    description: Localized product name
                    example: "Spiegellose Kamera"
                description:
                    type: string
                    description: Localized product description
                    example: "Hochwertige spiegellose Kamera für Profis"
                metaTitle:
                    type: string
                    description: SEO meta title
                metaDescription:
                    type: string
                    description: SEO meta description
                metaKeywords:
                    type: string
                    description: SEO meta keywords

        UpdateProductAbstractRequest:
            type: object
            properties:
                newFrom:
                    type: string
                    format: date-time
                    description: Product available from date
                    example: "2025-09-11T00:00:00+00:00"
                newTo:
                    type: string
                    format: date-time
                    description: Product available until date
                    example: "2025-09-30T23:59:59+00:00"
                stores:
                    type: array
                    description: List of store identifiers where the product is available (list can be retrieved from /stores endpoint)
                    items:
                        type: string
                    example: [ "DE","AT" ]
                prices:
                    type: array
                    description: Pricing information for different stores/currencies
                    items:
                        $ref: '#/components/schemas/CreatePriceRequest'
                localizations:
                    type: array
                    description: Localized content for different locales
                    items:
                        $ref: '#/components/schemas/CreateLocalizationRequest'
            additionalProperties: false
