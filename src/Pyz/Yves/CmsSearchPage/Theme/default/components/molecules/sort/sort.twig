{% extends model('component') %}

{% define config = {
    name: 'sort',
} %}

{% define data = {
    pagination: required,
    sort: required,
} %}

{% block body %}
    <div class="grid grid--middle grid--justify">
        <div class="{{ config.name }}__col {{ config.name }}__col--counter col col--sm-12 col--lg-auto spacing-y spacing-y--inner">
            {{ data.pagination.numFound | default(0) | executeFilterIfExists('formatInt', app.locale) }} {{ 'cms.page.itemsFound' | trans }}
        </div>

        <div class="{{ config.name }}__col col col--sm-12 col--lg-auto">
            <div class="{{ config.name }}__filter-grid grid">
                <div class="{{ config.name }}__col {{ config.name }}__col--select col col--sm-6 col--lg-auto">
                    <div class="grid grid--middle">
                        <div class="{{ config.name }}__col col is-hidden-sm-md">
                            {{ 'cms.page.filter.per' | trans }}:
                        </div>

                        <div class="{{ config.name }}__col col col col--sm-12 col--lg-auto">
                            {% set options = [] %}

                            {% for limit in data.pagination.config.validItemsPerPageOptions %}
                                {% set options = options | merge([{
                                    label: limit,
                                    value: limit | executeFilterIfExists('formatInt', app.locale),
                                    selected: limit == data.pagination.currentItemsPerPage,
                                }]) %}
                            {% endfor %}

                            {% embed molecule('custom-select') with {
                                modifiers: ['small', 'light', 'mobile-expand', 'different-mob-caret'],
                                data: {
                                    options: options,
                                },
                                attributes: {
                                    name: 'ipp',
                                    'data-form-submitter': true,
                                    'config-theme': 'small',
                                },
                            } only %}
                                {% block caret %}
                                    {% include atom('icon') with {
                                        class: config.name ~ '__caret is-hidden-sm-md',
                                        data: {
                                            name: 'caret-down',
                                        },
                                    } only %}

                                    {% include atom('icon') with {
                                        class: config.name ~ '__caret is-hidden-lg-xxl',
                                        data: {
                                            name: 'double-chevrons',
                                        },
                                    } only %}
                                {% endblock %}
                            {% endembed %}
                        </div>
                    </div>
                </div>

                <div class="{{ config.name }}__col {{ config.name }}__col--select col col--sm-6 col--lg-auto">
                    <div class="grid grid--middle">
                        <div class="{{ config.name }}__col col is-hidden-sm-md">
                            {{ 'cms.page.filter.sort' | trans }}:
                        </div>

                        <div class="{{ config.name }}__col col col col--sm-12 col--lg-auto">
                            {% set options = [{
                                label: 'cms.page.sort.relevance' | trans,
                                value: '',
                            }] %}

                            {% for sortParamName in data.sort.sortParamNames %}
                                {% set options = options | merge([{
                                    label: ('cms.page.sort.' ~ sortParamName) | trans,
                                    value: sortParamName,
                                    selected: sortParamName == data.sort.currentSortParam,
                                }]) %}
                            {% endfor %}

                            {% embed molecule('custom-select') with {
                                modifiers: ['small', 'light', 'mobile-expand', 'different-mob-caret'],
                                data: {
                                    options: options,
                                },
                                attributes: {
                                    name: 'sort',
                                    'data-form-submitter': true,
                                    'config-theme': 'small',
                                },
                            } only %}
                                {% block caret %}
                                    {% include atom('icon') with {
                                        class: config.name ~ '__caret is-hidden-sm-md',
                                        data: {
                                            name: 'caret-down',
                                        },
                                    } only %}

                                    {% include atom('icon') with {
                                        class: config.name ~ '__caret is-hidden-lg-xxl',
                                        data: {
                                            name: 'double-chevrons',
                                        },
                                    } only %}
                                {% endblock %}
                            {% endembed %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}
