{% extends molecule('service-point-shipment-types', '@SprykerFeature:SspServiceManagement') %}

{% block ajax %}
    {% set dynamicParams = {
        'service-type-key': {
            selector: ".#{config.name}__radio input:checked",
            attribute: 'data-service-type-key',
        },
        'shipment-type-uuid': {
            selector: ".#{config.name}__radio input:checked",
            attribute: 'value',
        },
        'service-type-uuid': {
            selector: ".#{config.name}__radio input:checked",
            attribute: 'data-service-type-uuid',
        },
        sku: {
            selector: ".#{config.name}",
            attribute: 'data-service-point-product-sku',
        },
        quantity: {
            selector: '.js-formatted-number-input__hidden-input',
            attribute: 'value',
        },
    } %}

    {{ parent() }}
{% endblock %}

{% block body %}
    <div {% if not data.hasOnlyDeliveryShipmentType %}class="spacing-y--bigger"{% endif %}>
        {% if data.shipmentTypes | length %}
            {% set hasMultipleShipmentTypes = (data.shipmentTypes | length ) > 1 %}

            {% if hasMultipleShipmentTypes %}
                {% block types %}
                    <div class="spacing-bottom">
                        <label class="label">{{ 'ssp_service_management.product.shipment_types' | trans }}</label>

                        <div class="grid">
                            {% for shipmentType in data.shipmentTypes %}
                                {% block type %}
                                    <div class="col spacing--small">
                                        {% include atom('radio') with {
                                            class: "#{config.name}__radio #{config.jsName}__radio",
                                            data: {
                                                label: shipmentType.label,
                                            },
                                            attributes: {
                                                checked: shipmentType.serviceTypeKey is not null,
                                                name: data.formFieldShipmentTypeUuid,
                                                disabled: data.isSelectionDisabled,
                                                value: shipmentType.value,
                                                required: shipmentType.isServicePointRequired,
                                                'data-service-type-key': shipmentType.serviceTypeKey,
                                                'data-service-type-uuid': shipmentType.serviceTypeUuid,
                                                (ajaxTriggerAttribute): true,
                                            },
                                        } only %}
                                    </div>
                                {% endblock %}
                            {% endfor %}
                        </div>
                    </div>
                {% endblock %}
            {% endif %}

            {% if (hasMultipleShipmentTypes and requiredServicePoint) or data.hasOnlyServiceShipmentType %}
                {{ block('servicePointSelector') }}
                <input data-service-point-uuid-input type="hidden" name="{{ data.formFieldServicePointUuid }}" value="">
                <input data-product-offer-reference-input type="hidden" name="{{ data.formFieldProductOfferReference }}" value="">

                {% if data.hasOnlyServiceShipmentType %}
                    {% set shipmentType = data.shipmentTypes | first %}

                    {% include atom('radio') with {
                        class: "#{config.name}__radio #{config.jsName}__radio is-hidden",
                        data: {
                            label: shipmentType.label,
                        },
                        attributes: {
                            checked: shipmentType.serviceTypeKey is not null,
                            name: data.formFieldShipmentTypeUuid,
                            disabled: data.isSelectionDisabled,
                            value: shipmentType.value,
                            required: shipmentType.isServicePointRequired,
                            'data-service-type-key': shipmentType.serviceTypeKey,
                            'data-service-type-uuid': shipmentType.serviceTypeUuid,
                            (ajaxTriggerAttribute): true,
                        },
                    } only %}
                {% endif %}
            {% endif %}

            {% if data.hasOnlyDeliveryShipmentType %}
                {% set shipmentType = data.shipmentTypes | first %}
                <input type="hidden" name="{{ data.formFieldShipmentTypeUuid }}" value="{{ shipmentType.value }}">
            {% endif %}
        {% else %}
            {% block empty %}
                {% if data.isConcreteProduct %}
                    <div class="box box--alert">
                        {{ 'ssp_service_management.product.no_shipment_types_available' | trans }}
                    </div>
                {% endif %}
            {% endblock %}
        {% endif %}

        {% block datepicker %}
            {% if data.isServiceDateTimeEnabled %}
                <div class="spacing-bottom">
                    {% widget 'LanguageSwitcherWidget' args [app.request.pathInfo, app.request.queryString, app.request.requestUri] with {
                        embed: {
                            input: {
                                label: 'ssp_service_management.product.service_date_time',
                                attrs: {
                                    name: data.formFieldItemMetadataScheduledAt,
                                    placeholder: 'yyyy-mm-dd HH:mm',
                                    id: 'product.service_date_time',
                                }
                            },
                        },
                    } only %}
                        {% block body %}
                            {% include molecule('date-time-picker') with {
                                data: {
                                    input: embed.input,
                                    hasIcon: true,
                                },
                                attributes: {
                                    language: data.currentLanguage,
                                    config: {
                                        dateFormat: 'Y-m-d H:i',
                                        minDate: 'today',
                                    } | json_encode,
                                },
                            } only %}
                        {% endblock %}
                    {% endwidget %}
                </div>
            {% endif %}
        {% endblock %}
    </div>
{% endblock %}
