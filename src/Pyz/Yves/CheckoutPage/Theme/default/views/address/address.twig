{% extends view('address', '@SprykerShop:CheckoutPage') %}

{% define data = {
    stepNumder: 1,
} %}

{% block containerClass %}container--medium{% endblock %}

{% block header %}
    {% set cart = data.forms.address.vars.data %}
    {{ parent() }}
{% endblock %}

{% block content %}
    {% set companyBusinessUnitShippingAddressWidget = findWidget('CompanyBusinessUnitAddressWidget', ['shippingAddress', data.forms.shipping.vars.data]) %}
    {% set isCompanyBusinessUnitShippingAddressApplicable = companyBusinessUnitShippingAddressWidget and companyBusinessUnitShippingAddressWidget.isApplicable %}
    {% set jsAddressClass = 'js-address' %}
    {% set billingSameAsShippingData = data.forms.billingSameAsShipping.vars.data %}

    <div class="grid grid--justify grid--baseline">
        <h5 class="title title--second col col--sm-6 col--lg-8">{{ 'page.checkout.address.shipping-address' | trans }}</h5>
        {% if is_granted('ROLE_USER') %}
            <a class="link link--secondary link--checkout text-right col col--sm-6 col--lg-4" href="{{ url('customer/address') }}">{{ 'page.checkout.address.manage_your_addresses' | trans }}</a>
        {% endif %}
    </div>

    {% embed molecule('form') with {
        modifiers: ['checkout-form'],
        data: {
            form: data.forms.address,
            submit: {
                enable: true,
                text: 'checkout.step.shipment' | trans,
                class: 'button button--big spacing-top spacing-top--big ' ~ jsAddressClass ~ '__form-submit',
            },
        },
        embed: {
            forms: {
                shipping: data.forms.shipping,
                billing: data.forms.billing,
                items: data.forms.items,
                bundleItems: data.forms.bundleItems,
            },
            isMultipleShipmentEnabled: data.isMultipleShipmentEnabled,
            companyBusinessUnitShippingAddressWidget: companyBusinessUnitShippingAddressWidget,
            isCompanyBusinessUnitShippingAddressApplicable: isCompanyBusinessUnitShippingAddressApplicable,
            jsAddressClass: jsAddressClass,
            isBillingSameAsShippingChecked: billingSameAsShippingData is not defined or billingSameAsShippingData,
        },
    } only %}
        {% block title %}{% endblock %}

        {% block fields %}
            {% set hiddenClassName = 'is-hidden' %}
            {% set shippingAddress = data.form.shippingAddress %}
            {% set hasShippingAddresses = shippingAddress.id_customer_address is defined %}
            {% set hasCompanyUnitAddresses = shippingAddress.id_company_unit_address is defined %}
            {% set hasShippingAddressesAndApplicable = embed.isCompanyBusinessUnitShippingAddressApplicable or hasShippingAddresses %}
            {% set shippingAddressValue = shippingAddress.id_customer_address.vars.value | default %}
            {% set companyUnitAddressValue = shippingAddress.id_company_unit_address.vars.value | default %}
            {% set isNewAddressSelected = shippingAddressValue == 0 or companyUnitAddressValue == 0 or (shippingAddressValue is empty and companyUnitAddressValue is empty) %}
            {% set newAddressHiddenClassName = hasShippingAddressesAndApplicable and not isNewAddressSelected ? ' ' ~ hiddenClassName %}
            {% set isMultipleShipmentSelected = shippingAddressValue == -1 or companyUnitAddressValue == -1 %}
            {% set multipleShipmentHiddenClassName = not isMultipleShipmentSelected ? ' ' ~ hiddenClassName %}
            {% set billingSameAsShippingHiddenClassName = isMultipleShipmentSelected ? hiddenClassName %}

            <div class="address-wrapper grid grid--bottom spacing-bottom spacing-bottom--big col col--sm-12 {{ embed.jsAddressClass }}__form-handler-shippingAddress">
                {% if hasShippingAddressesAndApplicable %}
                    <div class="address-wrapper__header">
                        {% if embed.isCompanyBusinessUnitShippingAddressApplicable %}
                            {% widget embed.companyBusinessUnitShippingAddressWidget with {
                                data: {
                                    isMultipleShipmentEnabled: embed.isMultipleShipmentEnabled,
                                    items: embed.forms.items,
                                    jsAddressClass: embed.jsAddressClass,
                                },
                            } only %}
                            {% endwidget %}

                            {% if hasShippingAddresses %}
                                {% do shippingAddress.id_customer_address.setRendered %}
                            {% endif %}

                            {% if hasCompanyUnitAddresses %}
                                {% do shippingAddress.id_company_unit_address.setRendered %}
                            {% endif %}
                        {% endif %}

                        {% if not embed.isCompanyBusinessUnitShippingAddressApplicable %}
                            <ul class="list spacing-y">
                                <li class="list__item spacing-y">
                                    {{
                                        form_row(embed.forms.shipping.id_customer_address, {
                                            label: 'page.checkout.address.delivery.address_select' | trans | upper,
                                            component: molecule('select'),
                                        })
                                    }}
                                </li>
                            </ul>
                        {% endif %}
                    </div>
                {% endif %}

                {% include molecule('form') with {
                    class: 'address-wrapper__content address-wrapper__content--mobile-background ' ~ embed.jsAddressClass ~ '__shipping' ~ newAddressHiddenClassName,
                    modifiers: ['checkout-address-content'],
                    data: {
                        form: embed.forms.shipping,
                        enableStart: false,
                        enableEnd: false,
                        layout: {
                            salutation: 'col col--sm-12 col--lg-4',
                            first_name: 'col col--sm-12 col--lg-4',
                            last_name: 'col col--sm-12 col--lg-4',
                            address1: 'col col--sm-12 col--lg-8',
                            address2: 'col col--sm-12 col--lg-4',
                            zip_code: 'col col--sm-12 col--lg-4',
                            city: 'col col--sm-12 col--lg-4',
                            iso2_code: 'col col--sm-12 col--lg-4',
                        },
                    },
                } only %}

                {% if embed.isMultipleShipmentEnabled %}
                    {% include molecule('address-item-form', 'CheckoutPage') with {
                        class: 'address-wrapper__content col col--sm-12 ' ~ embed.jsAddressClass ~ '__items-target' ~ multipleShipmentHiddenClassName,
                        data: {
                            form: embed.forms.items,
                            formBundle: embed.forms.bundleItems,
                            shippingForm: embed.forms.shipping,
                            jsAddressClass: embed.jsAddressClass,
                        },
                    } only %}
                {% endif %}
            </div>

            <div class="col col--sm-12 {{ embed.jsAddressClass }}__form-handler-billingSameAsShipping {{ billingSameAsShippingHiddenClassName }}">
                {{ form_row(data.form.billingSameAsShipping, {
                    component: molecule('toggler-checkbox'),
                    label: 'customer.billingSameAsShipping' | trans,
                    attributes: {
                        'target-class-name': embed.jsAddressClass ~ '__billing-same-as-shipping',
                        'class-to-toggle': hiddenClassName,
                        'add-class-when-checked': true,
                        checked: not isMultipleShipmentSelected ? embed.isBillingSameAsShippingChecked : false,
                    }
                }) }}
            </div>

            <div class="col col--sm-12 {{ embed.jsAddressClass }}__form-handler-billingAddress">
                {% embed molecule('form') with {
                    class: 'spacing-top spacing-top--big spacing-x spacing-x--inner spacing-x--reset ' ~ embed.jsAddressClass ~ '__billing-same-as-shipping ' ~ hiddenClassName,
                    modifiers: ['checkout-form', 'hidden-actions'],
                    data: {
                        form: embed.forms.billing,
                        enableStart: false,
                        enableEnd: false,
                        layout: {
                            salutation: 'col col--sm-12 col--lg-4',
                            first_name: 'col col--sm-12 col--lg-4',
                            last_name: 'col col--sm-12 col--lg-4',
                            address1: 'col col--sm-12 col--lg-8',
                            address2: 'col col--sm-12 col--lg-4',
                            zip_code: 'col col--sm-12 col--lg-4',
                            city: 'col col--sm-12 col--lg-4',
                            iso2_code: 'col col--sm-12 col--lg-4',
                        },
                    },
                    embed: {
                        jsAddressClass: embed.jsAddressClass,
                        hiddenClassName: hiddenClassName,
                    },
                } only %}
                    {% block title %}
                        <h5 class="title title--second">{{ 'page.checkout.address.billing-address' | trans }}</h5>
                    {% endblock %}

                    {% block fields %}
                        <div class="address-wrapper">
                            {% set companyBusinessUnitBillingAddressWidget = findWidget('CompanyBusinessUnitAddressWidget', ['billingAddress', data.form.vars.data]) %}
                            {% set isCompanyBusinessUnitBillingAddressApplicable = companyBusinessUnitBillingAddressWidget and companyBusinessUnitBillingAddressWidget.isApplicable %}
                            {% set hasBillingAddresses = data.form.id_customer_address is defined %}
                            {% set hasCompanyUnitBillingAddresses = data.form.id_company_unit_address is defined %}
                            {% set hasBillingAddressesAndApplicable = isCompanyBusinessUnitBillingAddressApplicable or hasBillingAddresses %}
                            {% set billingAddressValue = data.form.id_customer_address.vars.value | default %}
                            {% set companyUnitBillingAddressValue = data.form.id_company_unit_address.vars.value | default %}
                            {% set isNewAddressSelected = billingAddressValue == 0 or companyUnitBillingAddressValue == 0 or (billingAddressValue is empty and companyUnitBillingAddressValue is empty) %}
                            {% set newAddressHiddenClassName = hasBillingAddressesAndApplicable and not isNewAddressSelected ? embed.hiddenClassName %}

                            {% if hasBillingAddressesAndApplicable %}
                                <div class="address-wrapper__header">
                                    {% if isCompanyBusinessUnitBillingAddressApplicable %}
                                        {% widget companyBusinessUnitBillingAddressWidget with {
                                            data: {
                                                jsAddressClass: embed.jsAddressClass,
                                            },
                                        } only %}
                                        {% endwidget %}

                                        {% if hasBillingAddresses %}
                                            {% do data.form.id_customer_address.setRendered %}
                                        {% endif %}

                                        {% if hasCompanyUnitBillingAddresses %}
                                            {% do data.form.id_company_unit_address.setRendered %}
                                        {% endif %}
                                    {% endif %}

                                    {% if not isCompanyBusinessUnitBillingAddressApplicable %}
                                        <ul class="list spacing-y">
                                            <li class="list__item spacing-y">
                                                {{
                                                    form_row(data.form.id_customer_address, {
                                                        label: 'page.checkout.address.billing.address_select' | trans | upper,
                                                        component: molecule('select'),
                                                    })
                                                }}
                                            </li>
                                        </ul>
                                    {% endif %}
                                </div>
                            {% endif %}

                            <div class="address-wrapper__content address-wrapper__content--mobile-background {{ embed.jsAddressClass }}__billing grid grid--bottom grid--wide {{ newAddressHiddenClassName }}">
                                <div class="address-wrapper__inner-content">
                                    {{ parent() }}
                                </div>
                            </div>
                        </div>
                    {% endblock %}
                {% endembed %}
            </div>
        {% endblock %}

        {% block actions %}
            <div class="grid grid--middle grid--justify grid--expand">
                <div class="col col--sm-12">
                    {% set optionValueDeliverToMultipleAddresses = '-1' %}

                    {% if embed.isCompanyBusinessUnitShippingAddressApplicable %}
                        {% set existingShippingAddressSelectSelector = '.' ~ embed.jsAddressClass ~ '__form-select-shippingAddress' %}
                        {% set existingBillingAddressSelectSelector = '.' ~ embed.jsAddressClass ~ '__form-select-billingAddress' %}
                    {% endif %}

                    {% if not embed.isCompanyBusinessUnitShippingAddressApplicable %}
                        {% set existingShippingAddressSelectSelector = embed.forms.shipping.id_customer_address is defined ? '[name="' ~ embed.forms.shipping.id_customer_address.vars.full_name ~ '"]' %}
                        {% set existingBillingAddressSelectSelector = embed.forms.billing.id_customer_address is defined ? '[name="' ~ embed.forms.billing.id_customer_address.vars.full_name ~ '"]' %}
                    {% endif %}

                    {% include molecule('address-form-toggler', 'CustomerPage') ignore missing with {
                        attributes: {
                            'trigger-selector': existingShippingAddressSelectSelector | default,
                            'target-selector': '.' ~ embed.jsAddressClass ~ '__shipping',
                            'sub-target-selector': '.' ~ embed.jsAddressClass ~ '__items-target',
                            'container-billing-address-selector': '.' ~ embed.jsAddressClass ~ '__billing-same-as-shipping',
                            'billing-same-as-shipping-selector': '.' ~ embed.jsAddressClass ~ '__form-handler-billingSameAsShipping',
                            'billing-same-as-shipping-toggler-selector': 'input[name="addressesForm[billingSameAsShipping]"]',
                            'toggle-option-value': optionValueDeliverToMultipleAddresses,
                        },
                    } only %}

                    {% include molecule('address-form-toggler', 'CustomerPage') ignore missing with {
                        attributes: {
                            'trigger-selector': existingBillingAddressSelectSelector | default,
                            'target-selector': '.' ~ embed.jsAddressClass ~ '__billing',
                        },
                    } only %}
                </div>
                <div class="spacing-top col col--sm-12 text-left">
                    {{ parent() }}
                </div>
            </div>
        {% endblock %}
    {% endembed %}
{% endblock %}
