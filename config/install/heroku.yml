env:
    APPLICATION_ENV: development

stores:
    - DE

command-timeout: 3600

sections:
    clear:
        remove-logs:
            command: 'vendor/bin/console log:clear'

        remove-cache:
            command: 'vendor/bin/console cache:empty-all'

        remove-request-validation-cache:
            command: 'vendor/bin/console rest-api:remove-validation-cache'

        remove-navigation-cache:
            command: 'vendor/bin/console navigation:cache:remove'

        remove-source-map:
            command: 'vendor/bin/console search:source-map:remove'

        remove-entity-transfer:
            command: 'vendor/bin/console transfer:entity:remove'

        remove-transfer:
            command: 'vendor/bin/console transfer:remove'

    generate:
        generate-transfers:
            command: 'vendor/bin/console transfer:generate'

        generate-scope-collection-file:
            command: 'vendor/bin/console oauth:scope-collection-file:generate'

        propel-copy-schema:
            command: 'vendor/bin/console propel:schema:copy'

        propel-build:
            command: 'vendor/bin/console propel:model:build'

        generate-page-source-map:
            command: 'vendor/bin/console search:setup:source-map'
        generate-composer:
            command: 'composer dumpautoload -o --classmap-authoritative --apcu'

#    jenkins-down:
#        jenkins-stop:
#            command: 'vendor/bin/console scheduler:clean'
#            stores: true

    cache:
#        router-cache-warmup-yves:
#            command: 'vendor/bin/yves router:cache:warm-up'

        router-cache-warmup-backoffice:
            command: 'vendor/bin/console router:cache:warm-up:backoffice'

        oms-process-cache-warmup:
            command: 'vendor/bin/console oms:process-cache:warm-up'

        router-cache-warmup-backend-gateway:
            command: 'vendor/bin/console router:cache:warm-up:backend-gateway'

        twig-cache-warmup:
            command: 'vendor/bin/console twig:cache:warmer'

        navigation-cache-warmup:
            command: 'vendor/bin/console navigation:build-cache'

        rest-request-validation-cache-warmup:
            command: 'vendor/bin/console rest-api:build-request-validation-cache'

        class-resolver-build:
            command: 'vendor/bin/console cache:class-resolver:build'

#    queue-flush:
#        set-permissions:
#            command: 'vendor/bin/console queue:permission:set'
#            stores: true
#
#        purge-all-queues:
#            command: 'vendor/bin/console queue:queue:purge-all'
#            stores: true
#
#        delete-all-queues:
#            command: 'vendor/bin/console queue:queue:delete-all'
#            stores: true
#
#        delete-all-exchanges:
#            command: 'vendor/bin/console queue:exchanges:delete-all'
#            stores: true

    database-flush:
#        delete-elastic-search-index:
#            command: 'vendor/bin/console search:index:delete'
#            stores: true
#            groups:
#                - elastic
#
#        delete-storage:
#            command: 'vendor/bin/console storage:delete'
#            stores: true
#            groups:
#                - redis

        propel-migration-delete:
            command: 'vendor/bin/console propel:migration:delete -vvv --no-ansi'

        clean-db:
            command: 'vendor/bin/console propel:tables:drop -vvv --no-ansi'

    database-migrate:
        propel-copy-schema:
            command: 'vendor/bin/console propel:schema:copy -vvv --no-ansi'

        propel-postgres-compatibility:
            command: 'vendor/bin/console propel:pg-sql-compat -vvv --no-ansi'

        propel-diff:
            command: 'vendor/bin/console propel:diff -vvv --no-ansi'

        propel-migrate:
            command: 'vendor/bin/console propel:migrate -vvv --no-ansi'

        propel-migration-cleanup:
            command: 'vendor/bin/console propel:migration:delete -vvv --no-ansi'

        generate-entity-transfer:
            command: 'vendor/bin/console transfer:entity:generate'

        generate-composer:
            command: 'composer dumpautoload -o --classmap-authoritative --apcu'

        init-database:
            command: 'vendor/bin/console setup:init-db -vvv --no-ansi'

#        queue-setup:
#            command: 'vendor/bin/console queue:setup'
#            stores: true

#        setup-search-create-sources:
#            command: 'vendor/bin/console search:setup:sources'
#            stores: true
#            groups:
#                - elastic
#
#        setup-seach-create-source-map:
#            command: 'vendor/bin/console search:setup:source-map'
#            stores: true
#            groups:
#                - elastic

    demodata:
        import-eu-region-demodata:
            command: 'vendor/bin/console data:import --config=data/import/local/full_EU.yml'

        update-product-labels:
            command: 'vendor/bin/console product-label:relations:update'

        controller-cache-warmup:
            command: 'vendor/bin/glue glue-api:controller:cache:warm-up'

        acl-entity-synchronize:
            command: 'vendor/bin/console acl-entity:synchronize -vvv --no-ansi'
            stores: true

#    jenkins-up:
#        jenkins-generate:
#            command: 'vendor/bin/console scheduler:setup'
#            stores: true
#
#        jenkins-enable:
#            command: 'vendor/bin/console scheduler:resume'
#            stores: true

    frontend:
        project-install-dependencies:
            command: 'vendor/bin/console frontend:project:install-dependencies | tail -100 && echo "Output trimmed, only last 100 lines shown."'

        zed-build-frontend:
            command: 'vendor/bin/console frontend:zed:build -e production'

#        yves-build-frontend:
#            command: "vendor/bin/console frontend:yves:build -vvv"
#            groups:
#                - yves
