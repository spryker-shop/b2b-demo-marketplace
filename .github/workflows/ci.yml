name: B2B-MP-CI

on:
    pull_request:
        types: [ labeled, unlabeled, synchronize, opened ]
    push:
        branches:
            - master
    workflow_dispatch:

env:
    SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
    WEEKLY_CI_SLACK_CHANNEL_ID: ${{ secrets.WEEKLY_CI_SLACK_CHANNEL_ID }}
    JIRA_TICKET_SLACK_USER_GROUP_MAPPING: ${{ secrets.JIRA_TICKET_SLACK_USER_GROUP_MAPPING }}

concurrency:
    group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    cancel-in-progress: true

jobs:
    # docker-alpine-php-83-mariadb-robot:
    #     if: >
    #         contains(github.event.pull_request.labels.*.name, 'run-api-ci')
    #         || contains(github.event.pull_request.labels.*.name, 'run-latest-ci')
    #         || github.ref == 'refs/heads/master'
    #     name: "[run-api-ci] PHP 8.3 / MariaDB / Robot / API"
    #     runs-on: ubuntu-22.04
    #     env:
    #         PROGRESS_TYPE: plain
    #         SPRYKER_PLATFORM_IMAGE: spryker/php:8.3
    #         TRAVIS: 1
    #         ROBOT_TESTS_ARTIFACTS_BUCKET_REGION: eu-west-1
    #         SPRYKER_CURRENT_REGION: EU
    #         DYNAMIC_STORE_MODE: true
    #     steps:
    #         -   uses: actions/checkout@v4
    #         -   name: Install packages
    #             run: |
    #                 sudo apt-get update
    #                 sudo apt install awscli -q

    #         -   name: Install robotframework-suite-tests folder
    #             run: |
    #                 cd ./data && composer require "spryker/robotframework-suite-tests:dev-master" --dev --no-interaction
    #                 cp -r vendor ../vendor

    #         -   name: Install docker-compose
    #             run: |
    #                 sudo curl -L "https://github.com/docker/compose/releases/download/2.12.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    #                 sudo chmod +x /usr/local/bin/docker-compose
    #         -   name: Install Project
    #             continue-on-error: true
    #             run: |
    #                 git clone https://github.com/spryker/docker-sdk.git ./docker
    #                 docker/sdk boot deploy.ci.api.mariadb.robot.yml
    #                 sudo bash -c "echo '127.0.0.1 backend-api.eu.spryker.local backend-api.us.spryker.local backend-gateway.eu.spryker.local backend-gateway.us.spryker.local backoffice.eu.spryker.local backoffice.us.spryker.local glue-backend.eu.spryker.local glue-backend.us.spryker.local glue-storefront.eu.spryker.local glue-storefront.us.spryker.local glue.eu.spryker.local glue.us.spryker.local mail.spryker.local mp.eu.spryker.local mp.us.spryker.local queue.spryker.local spryker.local swagger.spryker.local yves.eu.spryker.local yves.us.spryker.local' >> /etc/hosts"
    #                 docker/sdk up -t
    #                 docker/sdk cli composer dump-autoload -o -a --apcu
    #                 docker/sdk console queue:worker:start --stop-when-empty
    #         -   name: Run Tests
    #             run: |
    #                 docker/sdk exec robot-framework robot -v env:api_mp_b2b -v docker:True -v dms:true -v glue_env:http://glue.eu.spryker.local -v bapi_env:http://glue-backend.eu.spryker.local -v sapi_env:http://glue-storefront.eu.spryker.local --exclude skip-due-to-issueORskip-due-to-refactoring -d results -s robotframework.tests.api.mp_b2b .
    #         -   name: Upload artifacts
    #             if: failure()
    #             run: |
    #                 AWS_DEFAULT_REGION=${{env.ROBOT_TESTS_ARTIFACTS_BUCKET_REGION}} AWS_ACCESS_KEY_ID=${{ secrets.ROBOT_TESTS_ARTIFACTS_KEY }} AWS_SECRET_ACCESS_KEY=${{ secrets.ROBOT_TESTS_ARTIFACTS_SECRET }} aws s3 cp .robot/results/log.html s3://${{vars.ROBOT_TESTS_ARTIFACTS_BUCKET}}/b2b-mp/dms-on/robot-api/${GITHUB_RUN_ID}/PHP8.3MariaDB/log.html

    #         -   name: Slack Notification for failed job
    #             uses: ./.github/actions/job-slack-notifications
    #             if: always()


    standalone-api-robot:
        if: >
            contains(github.event.pull_request.labels.*.name, 'run-api-ci')
            || contains(github.event.pull_request.labels.*.name, 'run-latest-ci')
            || github.ref == 'refs/heads/master'
        name: "[run-api-ci] PHP 8.3 / MariaDB / Robot / API / Standalone"
        runs-on: ubuntu-22.04
        env:
            PROGRESS_TYPE: plain
            SPRYKER_PLATFORM_IMAGE: spryker/php:8.3
            TRAVIS: 1
            ROBOT_TESTS_ARTIFACTS_BUCKET_REGION: eu-west-1
            SPRYKER_CURRENT_REGION: EU
            DYNAMIC_STORE_MODE: true
        steps:
            -   uses: actions/checkout@v4
            - uses: actions/setup-python@v5
              with:
                  python-version: '3.9'

            - name: Install packages
              run: |
                  sudo apt-get update
                  sudo apt-get install -y apache2-utils awscli
                  python3 -m pip install --upgrade pip
                  python3 -m pip install -U robotframework
                  python3 -m pip install -U robotframework-requests
                  python3 -m pip install -U robotframework-jsonlibrary
                  python3 -m pip install -U robotframework-databaselibrary
                  python3 -m pip install -U robotframework-browser
                  python3 -m pip install PyMySQL

            - name: Install docker-compose
              run: |
                  sudo curl -L "https://github.com/docker/compose/releases/download/2.12.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                  sudo chmod +x /usr/local/bin/docker-compose
            
            - name: Install Robot tests
              run: |
                  git clone https://github.com/spryker/robotframework-suite-tests.git --single-branch --branch master robotframework-tests

            - name: Install Project
              continue-on-error: true
              run: |
                  git clone https://github.com/spryker/docker-sdk.git ./docker
                  docker/sdk boot deploy.yml
                  sudo bash -c "echo '127.0.0.1 backend-api.eu.spryker.local backend-api.us.spryker.local backend-gateway.eu.spryker.local backend-gateway.us.spryker.local backoffice.eu.spryker.local backoffice.us.spryker.local glue-backend.eu.spryker.local glue-backend.us.spryker.local glue-storefront.eu.spryker.local glue-storefront.us.spryker.local glue.eu.spryker.local glue.us.spryker.local mail.spryker.local mp.eu.spryker.local mp.us.spryker.local queue.spryker.local spryker.local swagger.spryker.local yves.eu.spryker.local yves.us.spryker.local' >> /etc/hosts"
                  docker/sdk up -t
                  docker/sdk cli composer dump-autoload -o -a --apcu
                  docker/sdk console queue:worker:start --stop-when-empty
            - name: Run Tests
              run: |
                  cd robotframework-tests
                  robot -v env:api_mp_b2b -v docker:False -v dms:true -v glue_env:http://glue.eu.spryker.local -v bapi_env:http://glue-backend.eu.spryker.local -v sapi_env:http://glue-storefront.eu.spryker.local --exclude skip-due-to-issueORskip-due-to-refactoring -d results -s robotframework.tests.api.mp_b2b .
            - name: Upload artifacts
              if: failure()
              run: |
                  AWS_DEFAULT_REGION=${{env.ROBOT_TESTS_ARTIFACTS_BUCKET_REGION}} AWS_ACCESS_KEY_ID=${{ secrets.ROBOT_TESTS_ARTIFACTS_KEY }} AWS_SECRET_ACCESS_KEY=${{ secrets.ROBOT_TESTS_ARTIFACTS_SECRET }} aws s3 cp robotframework-tests/results/log.html s3://${{vars.ROBOT_TESTS_ARTIFACTS_BUCKET}}/b2b-mp/dms-on/robot-api/${GITHUB_RUN_ID}/PHP8.3MariaDB/log.html

            - name: Slack Notification for failed job
              uses: ./.github/actions/job-slack-notifications
              if: always()
